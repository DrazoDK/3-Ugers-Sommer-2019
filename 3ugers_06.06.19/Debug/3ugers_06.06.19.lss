
3ugers_06.06.19.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800200  00000824  000008b8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000824  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000065  00800206  00800206  000008be  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000008be  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000091c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b8  00000000  00000000  0000095c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001158  00000000  00000000  00000a14  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000e7d  00000000  00000000  00001b6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006b5  00000000  00000000  000029e9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000170  00000000  00000000  000030a0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006c1  00000000  00000000  00003210  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000033d  00000000  00000000  000038d1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000088  00000000  00000000  00003c0e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	df c0       	rjmp	.+446    	; 0x1d4 <__vector_5>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e4 e2       	ldi	r30, 0x24	; 36
  fc:	f8 e0       	ldi	r31, 0x08	; 8
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a6 30       	cpi	r26, 0x06	; 6
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a6 e0       	ldi	r26, 0x06	; 6
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	ab 36       	cpi	r26, 0x6B	; 107
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	23 d0       	rcall	.+70     	; 0x166 <main>
 120:	7f c3       	rjmp	.+1790   	; 0x820 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <MCU_to_FPGA>:
	}
	
}

void MCU_to_FPGA(char shape,char ampl, char freq)
{
 124:	0f 93       	push	r16
 126:	1f 93       	push	r17
 128:	cf 93       	push	r28
 12a:	df 93       	push	r29
 12c:	08 2f       	mov	r16, r24
 12e:	16 2f       	mov	r17, r22
 130:	d4 2f       	mov	r29, r20
	char ChkSum = SYNC ^ shape ^ ampl ^ freq; 
 132:	ca e5       	ldi	r28, 0x5A	; 90
 134:	c4 27       	eor	r28, r20
 136:	c6 27       	eor	r28, r22
 138:	c8 27       	eor	r28, r24
// 			sprintf(str, "sync %x shape %x, ampl %x ,freq %x chksum %x",SYNC, shape, ampl, freq, ChkSum);
// 			putsUSART0(str);
// 	
	putcSPI_master(SYNC);
 13a:	8a e5       	ldi	r24, 0x5A	; 90
 13c:	65 d0       	rcall	.+202    	; 0x208 <putcSPI_master>
	putcSPI_master(shape);				
 13e:	80 2f       	mov	r24, r16
 140:	63 d0       	rcall	.+198    	; 0x208 <putcSPI_master>
	putcSPI_master(ampl);
 142:	81 2f       	mov	r24, r17
 144:	61 d0       	rcall	.+194    	; 0x208 <putcSPI_master>
	putcSPI_master(freq);
 146:	8d 2f       	mov	r24, r29
 148:	5f d0       	rcall	.+190    	; 0x208 <putcSPI_master>
	putcSPI_master(ChkSum);
 14a:	8c 2f       	mov	r24, r28
 14c:	5d d0       	rcall	.+186    	; 0x208 <putcSPI_master>
 14e:	df 91       	pop	r29

}
 150:	cf 91       	pop	r28
 152:	1f 91       	pop	r17
 154:	0f 91       	pop	r16
 156:	08 95       	ret

00000158 <debounceInitE4>:
 158:	ea e6       	ldi	r30, 0x6A	; 106

void debounceInitE4(void)							//init debounce
{
	EICRB |= (1<<ISC41);							//Falling edge 1<-ISC41  0<-ISC40   -- (External Interrupt Control Register b)
 15a:	f0 e0       	ldi	r31, 0x00	; 0
 15c:	80 81       	ld	r24, Z
 15e:	82 60       	ori	r24, 0x02	; 2
 160:	80 83       	st	Z, r24
	EIMSK |= (1<<INT4);								//enable int4 -- (External Interrupt Mask Register )
 162:	ec 9a       	sbi	0x1d, 4	; 29
 164:	08 95       	ret

00000166 <main>:
	int i = 0; 
	char flag = 0; 
int main(void)
{
 
	SPI_MasterInit();						//initialize SPI
 166:	45 d0       	rcall	.+138    	; 0x1f2 <SPI_MasterInit>
	uart0_Init(MYUBRRF);					//initialize uart (for test)
 168:	87 e6       	ldi	r24, 0x67	; 103
 16a:	90 e0       	ldi	r25, 0x00	; 0
	debounceInitE4();
 16c:	54 d0       	rcall	.+168    	; 0x216 <uart0_Init>
 16e:	f4 df       	rcall	.-24     	; 0x158 <debounceInitE4>
	char i = 0; 
 170:	c0 e0       	ldi	r28, 0x00	; 0
	
    while (1) 
    {
	MCU_to_FPGA(i%3, (char)i, (char)i);
 172:	db ea       	ldi	r29, 0xAB	; 171
	_delay_ms(1); 
	if (flag == 1)	
		i++;
		
	sprintf(str, "%d, ",i);
 174:	0f 2e       	mov	r0, r31
 176:	f0 e0       	ldi	r31, 0x00	; 0
 178:	ef 2e       	mov	r14, r31
 17a:	f2 e0       	ldi	r31, 0x02	; 2
 17c:	ff 2e       	mov	r15, r31
 17e:	f0 2d       	mov	r31, r0
 180:	07 e0       	ldi	r16, 0x07	; 7
 182:	12 e0       	ldi	r17, 0x02	; 2
	debounceInitE4();
	char i = 0; 
	
    while (1) 
    {
	MCU_to_FPGA(i%3, (char)i, (char)i);
 184:	cd 9f       	mul	r28, r29
 186:	81 2d       	mov	r24, r1
 188:	11 24       	eor	r1, r1
 18a:	86 95       	lsr	r24
 18c:	98 2f       	mov	r25, r24
 18e:	99 0f       	add	r25, r25
 190:	89 0f       	add	r24, r25
 192:	4c 2f       	mov	r20, r28
 194:	6c 2f       	mov	r22, r28
 196:	9c 2f       	mov	r25, r28
 198:	98 1b       	sub	r25, r24
 19a:	89 2f       	mov	r24, r25
 19c:	c3 df       	rcall	.-122    	; 0x124 <MCU_to_FPGA>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 19e:	8f e9       	ldi	r24, 0x9F	; 159
 1a0:	9f e0       	ldi	r25, 0x0F	; 15
 1a2:	01 97       	sbiw	r24, 0x01	; 1
 1a4:	f1 f7       	brne	.-4      	; 0x1a2 <main+0x3c>
 1a6:	00 c0       	rjmp	.+0      	; 0x1a8 <main+0x42>
 1a8:	00 00       	nop
	_delay_ms(1); 
	if (flag == 1)	
 1aa:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <__data_end>
 1ae:	81 30       	cpi	r24, 0x01	; 1
 1b0:	09 f4       	brne	.+2      	; 0x1b4 <main+0x4e>
		i++;
 1b2:	cf 5f       	subi	r28, 0xFF	; 255
		
	sprintf(str, "%d, ",i);
 1b4:	1f 92       	push	r1
 1b6:	cf 93       	push	r28
 1b8:	ff 92       	push	r15
 1ba:	ef 92       	push	r14
 1bc:	1f 93       	push	r17
 1be:	0f 93       	push	r16
	putsUSART0(str);
 1c0:	54 d0       	rcall	.+168    	; 0x26a <sprintf>
 1c2:	c8 01       	movw	r24, r16
 1c4:	42 d0       	rcall	.+132    	; 0x24a <putsUSART0>
	
	
	}
 1c6:	0f 90       	pop	r0
 1c8:	0f 90       	pop	r0
 1ca:	0f 90       	pop	r0
 1cc:	0f 90       	pop	r0
 1ce:	0f 90       	pop	r0
 1d0:	0f 90       	pop	r0
 1d2:	d8 cf       	rjmp	.-80     	; 0x184 <main+0x1e>

000001d4 <__vector_5>:
	//PORTE |= 0x10;									//pull_up
}


ISR(INT4_vect)
{
 1d4:	1f 92       	push	r1
 1d6:	0f 92       	push	r0
 1d8:	0f b6       	in	r0, 0x3f	; 63
 1da:	0f 92       	push	r0
 1dc:	11 24       	eor	r1, r1
 1de:	8f 93       	push	r24
flag = 1;
 1e0:	81 e0       	ldi	r24, 0x01	; 1
 1e2:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <__data_end>
}
 1e6:	8f 91       	pop	r24
 1e8:	0f 90       	pop	r0
 1ea:	0f be       	out	0x3f, r0	; 63
 1ec:	0f 90       	pop	r0
 1ee:	1f 90       	pop	r1
 1f0:	18 95       	reti

000001f2 <SPI_MasterInit>:
}

void SPI_SlaveInit(){
	DDRB |=(1<<DDB3);   //MISO
	SPCR |=(1<<SPE);    //spi enable  slave
	SPCR |=(1<<CPOL);
 1f2:	84 b1       	in	r24, 0x04	; 4
 1f4:	87 60       	ori	r24, 0x07	; 7
 1f6:	84 b9       	out	0x04, r24	; 4
 1f8:	8c b5       	in	r24, 0x2c	; 44
 1fa:	80 6d       	ori	r24, 0xD0	; 208
 1fc:	8c bd       	out	0x2c, r24	; 44
 1fe:	8c b5       	in	r24, 0x2c	; 44
 200:	83 60       	ori	r24, 0x03	; 3
 202:	8c bd       	out	0x2c, r24	; 44
 204:	28 9a       	sbi	0x05, 0	; 5
 206:	08 95       	ret

00000208 <putcSPI_master>:


/*The following function sends a character from the master SPI to the slave SPI.*/
void putcSPI_master(unsigned char cx) {
	
	PORTB&=~(1<<PB0); //set !SS low activates slave
 208:	28 98       	cbi	0x05, 0	; 5
	SPDR = cx;
 20a:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1<<SPIF))); // wait for data to be shifted out
 20c:	0d b4       	in	r0, 0x2d	; 45
 20e:	07 fe       	sbrs	r0, 7
 210:	fd cf       	rjmp	.-6      	; 0x20c <putcSPI_master+0x4>
	// clear SPIF flag
	PORTB|=(1<<PB0);
 212:	28 9a       	sbi	0x05, 0	; 5
 214:	08 95       	ret

00000216 <uart0_Init>:
}	  
char getchUSART0(void)					 //receives 1 byte
{
	while(!(UCSR0A & (1<<RXC0))); //polling\\ wait until finished receving
	return UDR0;
}
 216:	22 e0       	ldi	r18, 0x02	; 2
 218:	20 93 c0 00 	sts	0x00C0, r18	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7000c0>
 21c:	e1 ec       	ldi	r30, 0xC1	; 193
 21e:	f0 e0       	ldi	r31, 0x00	; 0
 220:	20 81       	ld	r18, Z
 222:	28 61       	ori	r18, 0x18	; 24
 224:	20 83       	st	Z, r18
 226:	e2 ec       	ldi	r30, 0xC2	; 194
 228:	f0 e0       	ldi	r31, 0x00	; 0
 22a:	20 81       	ld	r18, Z
 22c:	26 60       	ori	r18, 0x06	; 6
 22e:	20 83       	st	Z, r18
 230:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 234:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 238:	08 95       	ret

0000023a <putchUSART0>:

void putchUSART0(char tx)				 //transmit 1 byte
{
	while(!(UCSR0A & (1<<UDRE0))); //polling\\ waiting for empty transmit buffer
 23a:	e0 ec       	ldi	r30, 0xC0	; 192
 23c:	f0 e0       	ldi	r31, 0x00	; 0
 23e:	90 81       	ld	r25, Z
 240:	95 ff       	sbrs	r25, 5
 242:	fd cf       	rjmp	.-6      	; 0x23e <putchUSART0+0x4>
	UDR0 =tx;
 244:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 248:	08 95       	ret

0000024a <putsUSART0>:
}
void putsUSART0(char *pnt)				 //transmits string
{
 24a:	cf 93       	push	r28
 24c:	df 93       	push	r29
 24e:	ec 01       	movw	r28, r24
	while(*pnt)
 250:	88 81       	ld	r24, Y
 252:	88 23       	and	r24, r24
 254:	29 f0       	breq	.+10     	; 0x260 <putsUSART0+0x16>
 256:	21 96       	adiw	r28, 0x01	; 1
	{
		putchUSART0(*pnt++);
 258:	f0 df       	rcall	.-32     	; 0x23a <putchUSART0>
	while(!(UCSR0A & (1<<UDRE0))); //polling\\ waiting for empty transmit buffer
	UDR0 =tx;
}
void putsUSART0(char *pnt)				 //transmits string
{
	while(*pnt)
 25a:	89 91       	ld	r24, Y+
 25c:	81 11       	cpse	r24, r1
 25e:	fc cf       	rjmp	.-8      	; 0x258 <putsUSART0+0xe>
	{
		putchUSART0(*pnt++);
	}
	putchUSART0('\n');
 260:	8a e0       	ldi	r24, 0x0A	; 10
 262:	eb df       	rcall	.-42     	; 0x23a <putchUSART0>
		
}
 264:	df 91       	pop	r29
 266:	cf 91       	pop	r28
 268:	08 95       	ret

0000026a <sprintf>:
 26a:	0f 93       	push	r16
 26c:	1f 93       	push	r17
 26e:	cf 93       	push	r28
 270:	df 93       	push	r29
 272:	cd b7       	in	r28, 0x3d	; 61
 274:	de b7       	in	r29, 0x3e	; 62
 276:	2e 97       	sbiw	r28, 0x0e	; 14
 278:	0f b6       	in	r0, 0x3f	; 63
 27a:	f8 94       	cli
 27c:	de bf       	out	0x3e, r29	; 62
 27e:	0f be       	out	0x3f, r0	; 63
 280:	cd bf       	out	0x3d, r28	; 61
 282:	0e 89       	ldd	r16, Y+22	; 0x16
 284:	1f 89       	ldd	r17, Y+23	; 0x17
 286:	86 e0       	ldi	r24, 0x06	; 6
 288:	8c 83       	std	Y+4, r24	; 0x04
 28a:	1a 83       	std	Y+2, r17	; 0x02
 28c:	09 83       	std	Y+1, r16	; 0x01
 28e:	8f ef       	ldi	r24, 0xFF	; 255
 290:	9f e7       	ldi	r25, 0x7F	; 127
 292:	9e 83       	std	Y+6, r25	; 0x06
 294:	8d 83       	std	Y+5, r24	; 0x05
 296:	ae 01       	movw	r20, r28
 298:	46 5e       	subi	r20, 0xE6	; 230
 29a:	5f 4f       	sbci	r21, 0xFF	; 255
 29c:	68 8d       	ldd	r22, Y+24	; 0x18
 29e:	79 8d       	ldd	r23, Y+25	; 0x19
 2a0:	ce 01       	movw	r24, r28
 2a2:	01 96       	adiw	r24, 0x01	; 1
 2a4:	10 d0       	rcall	.+32     	; 0x2c6 <vfprintf>
 2a6:	ef 81       	ldd	r30, Y+7	; 0x07
 2a8:	f8 85       	ldd	r31, Y+8	; 0x08
 2aa:	e0 0f       	add	r30, r16
 2ac:	f1 1f       	adc	r31, r17
 2ae:	10 82       	st	Z, r1
 2b0:	2e 96       	adiw	r28, 0x0e	; 14
 2b2:	0f b6       	in	r0, 0x3f	; 63
 2b4:	f8 94       	cli
 2b6:	de bf       	out	0x3e, r29	; 62
 2b8:	0f be       	out	0x3f, r0	; 63
 2ba:	cd bf       	out	0x3d, r28	; 61
 2bc:	df 91       	pop	r29
 2be:	cf 91       	pop	r28
 2c0:	1f 91       	pop	r17
 2c2:	0f 91       	pop	r16
 2c4:	08 95       	ret

000002c6 <vfprintf>:
 2c6:	2f 92       	push	r2
 2c8:	3f 92       	push	r3
 2ca:	4f 92       	push	r4
 2cc:	5f 92       	push	r5
 2ce:	6f 92       	push	r6
 2d0:	7f 92       	push	r7
 2d2:	8f 92       	push	r8
 2d4:	9f 92       	push	r9
 2d6:	af 92       	push	r10
 2d8:	bf 92       	push	r11
 2da:	cf 92       	push	r12
 2dc:	df 92       	push	r13
 2de:	ef 92       	push	r14
 2e0:	ff 92       	push	r15
 2e2:	0f 93       	push	r16
 2e4:	1f 93       	push	r17
 2e6:	cf 93       	push	r28
 2e8:	df 93       	push	r29
 2ea:	cd b7       	in	r28, 0x3d	; 61
 2ec:	de b7       	in	r29, 0x3e	; 62
 2ee:	2b 97       	sbiw	r28, 0x0b	; 11
 2f0:	0f b6       	in	r0, 0x3f	; 63
 2f2:	f8 94       	cli
 2f4:	de bf       	out	0x3e, r29	; 62
 2f6:	0f be       	out	0x3f, r0	; 63
 2f8:	cd bf       	out	0x3d, r28	; 61
 2fa:	6c 01       	movw	r12, r24
 2fc:	7b 01       	movw	r14, r22
 2fe:	8a 01       	movw	r16, r20
 300:	fc 01       	movw	r30, r24
 302:	17 82       	std	Z+7, r1	; 0x07
 304:	16 82       	std	Z+6, r1	; 0x06
 306:	83 81       	ldd	r24, Z+3	; 0x03
 308:	81 ff       	sbrs	r24, 1
 30a:	bf c1       	rjmp	.+894    	; 0x68a <__LOCK_REGION_LENGTH__+0x28a>
 30c:	ce 01       	movw	r24, r28
 30e:	01 96       	adiw	r24, 0x01	; 1
 310:	3c 01       	movw	r6, r24
 312:	f6 01       	movw	r30, r12
 314:	93 81       	ldd	r25, Z+3	; 0x03
 316:	f7 01       	movw	r30, r14
 318:	93 fd       	sbrc	r25, 3
 31a:	85 91       	lpm	r24, Z+
 31c:	93 ff       	sbrs	r25, 3
 31e:	81 91       	ld	r24, Z+
 320:	7f 01       	movw	r14, r30
 322:	88 23       	and	r24, r24
 324:	09 f4       	brne	.+2      	; 0x328 <vfprintf+0x62>
 326:	ad c1       	rjmp	.+858    	; 0x682 <__LOCK_REGION_LENGTH__+0x282>
 328:	85 32       	cpi	r24, 0x25	; 37
 32a:	39 f4       	brne	.+14     	; 0x33a <vfprintf+0x74>
 32c:	93 fd       	sbrc	r25, 3
 32e:	85 91       	lpm	r24, Z+
 330:	93 ff       	sbrs	r25, 3
 332:	81 91       	ld	r24, Z+
 334:	7f 01       	movw	r14, r30
 336:	85 32       	cpi	r24, 0x25	; 37
 338:	21 f4       	brne	.+8      	; 0x342 <vfprintf+0x7c>
 33a:	b6 01       	movw	r22, r12
 33c:	90 e0       	ldi	r25, 0x00	; 0
 33e:	d6 d1       	rcall	.+940    	; 0x6ec <fputc>
 340:	e8 cf       	rjmp	.-48     	; 0x312 <vfprintf+0x4c>
 342:	91 2c       	mov	r9, r1
 344:	21 2c       	mov	r2, r1
 346:	31 2c       	mov	r3, r1
 348:	ff e1       	ldi	r31, 0x1F	; 31
 34a:	f3 15       	cp	r31, r3
 34c:	d8 f0       	brcs	.+54     	; 0x384 <vfprintf+0xbe>
 34e:	8b 32       	cpi	r24, 0x2B	; 43
 350:	79 f0       	breq	.+30     	; 0x370 <vfprintf+0xaa>
 352:	38 f4       	brcc	.+14     	; 0x362 <vfprintf+0x9c>
 354:	80 32       	cpi	r24, 0x20	; 32
 356:	79 f0       	breq	.+30     	; 0x376 <vfprintf+0xb0>
 358:	83 32       	cpi	r24, 0x23	; 35
 35a:	a1 f4       	brne	.+40     	; 0x384 <vfprintf+0xbe>
 35c:	23 2d       	mov	r18, r3
 35e:	20 61       	ori	r18, 0x10	; 16
 360:	1d c0       	rjmp	.+58     	; 0x39c <vfprintf+0xd6>
 362:	8d 32       	cpi	r24, 0x2D	; 45
 364:	61 f0       	breq	.+24     	; 0x37e <vfprintf+0xb8>
 366:	80 33       	cpi	r24, 0x30	; 48
 368:	69 f4       	brne	.+26     	; 0x384 <vfprintf+0xbe>
 36a:	23 2d       	mov	r18, r3
 36c:	21 60       	ori	r18, 0x01	; 1
 36e:	16 c0       	rjmp	.+44     	; 0x39c <vfprintf+0xd6>
 370:	83 2d       	mov	r24, r3
 372:	82 60       	ori	r24, 0x02	; 2
 374:	38 2e       	mov	r3, r24
 376:	e3 2d       	mov	r30, r3
 378:	e4 60       	ori	r30, 0x04	; 4
 37a:	3e 2e       	mov	r3, r30
 37c:	2a c0       	rjmp	.+84     	; 0x3d2 <vfprintf+0x10c>
 37e:	f3 2d       	mov	r31, r3
 380:	f8 60       	ori	r31, 0x08	; 8
 382:	1d c0       	rjmp	.+58     	; 0x3be <vfprintf+0xf8>
 384:	37 fc       	sbrc	r3, 7
 386:	2d c0       	rjmp	.+90     	; 0x3e2 <vfprintf+0x11c>
 388:	20 ed       	ldi	r18, 0xD0	; 208
 38a:	28 0f       	add	r18, r24
 38c:	2a 30       	cpi	r18, 0x0A	; 10
 38e:	40 f0       	brcs	.+16     	; 0x3a0 <vfprintf+0xda>
 390:	8e 32       	cpi	r24, 0x2E	; 46
 392:	b9 f4       	brne	.+46     	; 0x3c2 <vfprintf+0xfc>
 394:	36 fc       	sbrc	r3, 6
 396:	75 c1       	rjmp	.+746    	; 0x682 <__LOCK_REGION_LENGTH__+0x282>
 398:	23 2d       	mov	r18, r3
 39a:	20 64       	ori	r18, 0x40	; 64
 39c:	32 2e       	mov	r3, r18
 39e:	19 c0       	rjmp	.+50     	; 0x3d2 <vfprintf+0x10c>
 3a0:	36 fe       	sbrs	r3, 6
 3a2:	06 c0       	rjmp	.+12     	; 0x3b0 <vfprintf+0xea>
 3a4:	8a e0       	ldi	r24, 0x0A	; 10
 3a6:	98 9e       	mul	r9, r24
 3a8:	20 0d       	add	r18, r0
 3aa:	11 24       	eor	r1, r1
 3ac:	92 2e       	mov	r9, r18
 3ae:	11 c0       	rjmp	.+34     	; 0x3d2 <vfprintf+0x10c>
 3b0:	ea e0       	ldi	r30, 0x0A	; 10
 3b2:	2e 9e       	mul	r2, r30
 3b4:	20 0d       	add	r18, r0
 3b6:	11 24       	eor	r1, r1
 3b8:	22 2e       	mov	r2, r18
 3ba:	f3 2d       	mov	r31, r3
 3bc:	f0 62       	ori	r31, 0x20	; 32
 3be:	3f 2e       	mov	r3, r31
 3c0:	08 c0       	rjmp	.+16     	; 0x3d2 <vfprintf+0x10c>
 3c2:	8c 36       	cpi	r24, 0x6C	; 108
 3c4:	21 f4       	brne	.+8      	; 0x3ce <vfprintf+0x108>
 3c6:	83 2d       	mov	r24, r3
 3c8:	80 68       	ori	r24, 0x80	; 128
 3ca:	38 2e       	mov	r3, r24
 3cc:	02 c0       	rjmp	.+4      	; 0x3d2 <vfprintf+0x10c>
 3ce:	88 36       	cpi	r24, 0x68	; 104
 3d0:	41 f4       	brne	.+16     	; 0x3e2 <vfprintf+0x11c>
 3d2:	f7 01       	movw	r30, r14
 3d4:	93 fd       	sbrc	r25, 3
 3d6:	85 91       	lpm	r24, Z+
 3d8:	93 ff       	sbrs	r25, 3
 3da:	81 91       	ld	r24, Z+
 3dc:	7f 01       	movw	r14, r30
 3de:	81 11       	cpse	r24, r1
 3e0:	b3 cf       	rjmp	.-154    	; 0x348 <vfprintf+0x82>
 3e2:	98 2f       	mov	r25, r24
 3e4:	9f 7d       	andi	r25, 0xDF	; 223
 3e6:	95 54       	subi	r25, 0x45	; 69
 3e8:	93 30       	cpi	r25, 0x03	; 3
 3ea:	28 f4       	brcc	.+10     	; 0x3f6 <vfprintf+0x130>
 3ec:	0c 5f       	subi	r16, 0xFC	; 252
 3ee:	1f 4f       	sbci	r17, 0xFF	; 255
 3f0:	9f e3       	ldi	r25, 0x3F	; 63
 3f2:	99 83       	std	Y+1, r25	; 0x01
 3f4:	0d c0       	rjmp	.+26     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 3f6:	83 36       	cpi	r24, 0x63	; 99
 3f8:	31 f0       	breq	.+12     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3fa:	83 37       	cpi	r24, 0x73	; 115
 3fc:	71 f0       	breq	.+28     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 3fe:	83 35       	cpi	r24, 0x53	; 83
 400:	09 f0       	breq	.+2      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 402:	55 c0       	rjmp	.+170    	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 404:	20 c0       	rjmp	.+64     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 406:	f8 01       	movw	r30, r16
 408:	80 81       	ld	r24, Z
 40a:	89 83       	std	Y+1, r24	; 0x01
 40c:	0e 5f       	subi	r16, 0xFE	; 254
 40e:	1f 4f       	sbci	r17, 0xFF	; 255
 410:	88 24       	eor	r8, r8
 412:	83 94       	inc	r8
 414:	91 2c       	mov	r9, r1
 416:	53 01       	movw	r10, r6
 418:	12 c0       	rjmp	.+36     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 41a:	28 01       	movw	r4, r16
 41c:	f2 e0       	ldi	r31, 0x02	; 2
 41e:	4f 0e       	add	r4, r31
 420:	51 1c       	adc	r5, r1
 422:	f8 01       	movw	r30, r16
 424:	a0 80       	ld	r10, Z
 426:	b1 80       	ldd	r11, Z+1	; 0x01
 428:	36 fe       	sbrs	r3, 6
 42a:	03 c0       	rjmp	.+6      	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 42c:	69 2d       	mov	r22, r9
 42e:	70 e0       	ldi	r23, 0x00	; 0
 430:	02 c0       	rjmp	.+4      	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 432:	6f ef       	ldi	r22, 0xFF	; 255
 434:	7f ef       	ldi	r23, 0xFF	; 255
 436:	c5 01       	movw	r24, r10
 438:	4e d1       	rcall	.+668    	; 0x6d6 <strnlen>
 43a:	4c 01       	movw	r8, r24
 43c:	82 01       	movw	r16, r4
 43e:	f3 2d       	mov	r31, r3
 440:	ff 77       	andi	r31, 0x7F	; 127
 442:	3f 2e       	mov	r3, r31
 444:	15 c0       	rjmp	.+42     	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 446:	28 01       	movw	r4, r16
 448:	22 e0       	ldi	r18, 0x02	; 2
 44a:	42 0e       	add	r4, r18
 44c:	51 1c       	adc	r5, r1
 44e:	f8 01       	movw	r30, r16
 450:	a0 80       	ld	r10, Z
 452:	b1 80       	ldd	r11, Z+1	; 0x01
 454:	36 fe       	sbrs	r3, 6
 456:	03 c0       	rjmp	.+6      	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 458:	69 2d       	mov	r22, r9
 45a:	70 e0       	ldi	r23, 0x00	; 0
 45c:	02 c0       	rjmp	.+4      	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 45e:	6f ef       	ldi	r22, 0xFF	; 255
 460:	7f ef       	ldi	r23, 0xFF	; 255
 462:	c5 01       	movw	r24, r10
 464:	2d d1       	rcall	.+602    	; 0x6c0 <strnlen_P>
 466:	4c 01       	movw	r8, r24
 468:	f3 2d       	mov	r31, r3
 46a:	f0 68       	ori	r31, 0x80	; 128
 46c:	3f 2e       	mov	r3, r31
 46e:	82 01       	movw	r16, r4
 470:	33 fc       	sbrc	r3, 3
 472:	19 c0       	rjmp	.+50     	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
 474:	82 2d       	mov	r24, r2
 476:	90 e0       	ldi	r25, 0x00	; 0
 478:	88 16       	cp	r8, r24
 47a:	99 06       	cpc	r9, r25
 47c:	a0 f4       	brcc	.+40     	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
 47e:	b6 01       	movw	r22, r12
 480:	80 e2       	ldi	r24, 0x20	; 32
 482:	90 e0       	ldi	r25, 0x00	; 0
 484:	33 d1       	rcall	.+614    	; 0x6ec <fputc>
 486:	2a 94       	dec	r2
 488:	f5 cf       	rjmp	.-22     	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 48a:	f5 01       	movw	r30, r10
 48c:	37 fc       	sbrc	r3, 7
 48e:	85 91       	lpm	r24, Z+
 490:	37 fe       	sbrs	r3, 7
 492:	81 91       	ld	r24, Z+
 494:	5f 01       	movw	r10, r30
 496:	b6 01       	movw	r22, r12
 498:	90 e0       	ldi	r25, 0x00	; 0
 49a:	28 d1       	rcall	.+592    	; 0x6ec <fputc>
 49c:	21 10       	cpse	r2, r1
 49e:	2a 94       	dec	r2
 4a0:	21 e0       	ldi	r18, 0x01	; 1
 4a2:	82 1a       	sub	r8, r18
 4a4:	91 08       	sbc	r9, r1
 4a6:	81 14       	cp	r8, r1
 4a8:	91 04       	cpc	r9, r1
 4aa:	79 f7       	brne	.-34     	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
 4ac:	e1 c0       	rjmp	.+450    	; 0x670 <__LOCK_REGION_LENGTH__+0x270>
 4ae:	84 36       	cpi	r24, 0x64	; 100
 4b0:	11 f0       	breq	.+4      	; 0x4b6 <__LOCK_REGION_LENGTH__+0xb6>
 4b2:	89 36       	cpi	r24, 0x69	; 105
 4b4:	39 f5       	brne	.+78     	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
 4b6:	f8 01       	movw	r30, r16
 4b8:	37 fe       	sbrs	r3, 7
 4ba:	07 c0       	rjmp	.+14     	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 4bc:	60 81       	ld	r22, Z
 4be:	71 81       	ldd	r23, Z+1	; 0x01
 4c0:	82 81       	ldd	r24, Z+2	; 0x02
 4c2:	93 81       	ldd	r25, Z+3	; 0x03
 4c4:	0c 5f       	subi	r16, 0xFC	; 252
 4c6:	1f 4f       	sbci	r17, 0xFF	; 255
 4c8:	08 c0       	rjmp	.+16     	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
 4ca:	60 81       	ld	r22, Z
 4cc:	71 81       	ldd	r23, Z+1	; 0x01
 4ce:	07 2e       	mov	r0, r23
 4d0:	00 0c       	add	r0, r0
 4d2:	88 0b       	sbc	r24, r24
 4d4:	99 0b       	sbc	r25, r25
 4d6:	0e 5f       	subi	r16, 0xFE	; 254
 4d8:	1f 4f       	sbci	r17, 0xFF	; 255
 4da:	f3 2d       	mov	r31, r3
 4dc:	ff 76       	andi	r31, 0x6F	; 111
 4de:	3f 2e       	mov	r3, r31
 4e0:	97 ff       	sbrs	r25, 7
 4e2:	09 c0       	rjmp	.+18     	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 4e4:	90 95       	com	r25
 4e6:	80 95       	com	r24
 4e8:	70 95       	com	r23
 4ea:	61 95       	neg	r22
 4ec:	7f 4f       	sbci	r23, 0xFF	; 255
 4ee:	8f 4f       	sbci	r24, 0xFF	; 255
 4f0:	9f 4f       	sbci	r25, 0xFF	; 255
 4f2:	f0 68       	ori	r31, 0x80	; 128
 4f4:	3f 2e       	mov	r3, r31
 4f6:	2a e0       	ldi	r18, 0x0A	; 10
 4f8:	30 e0       	ldi	r19, 0x00	; 0
 4fa:	a3 01       	movw	r20, r6
 4fc:	33 d1       	rcall	.+614    	; 0x764 <__ultoa_invert>
 4fe:	88 2e       	mov	r8, r24
 500:	86 18       	sub	r8, r6
 502:	44 c0       	rjmp	.+136    	; 0x58c <__LOCK_REGION_LENGTH__+0x18c>
 504:	85 37       	cpi	r24, 0x75	; 117
 506:	31 f4       	brne	.+12     	; 0x514 <__LOCK_REGION_LENGTH__+0x114>
 508:	23 2d       	mov	r18, r3
 50a:	2f 7e       	andi	r18, 0xEF	; 239
 50c:	b2 2e       	mov	r11, r18
 50e:	2a e0       	ldi	r18, 0x0A	; 10
 510:	30 e0       	ldi	r19, 0x00	; 0
 512:	25 c0       	rjmp	.+74     	; 0x55e <__LOCK_REGION_LENGTH__+0x15e>
 514:	93 2d       	mov	r25, r3
 516:	99 7f       	andi	r25, 0xF9	; 249
 518:	b9 2e       	mov	r11, r25
 51a:	8f 36       	cpi	r24, 0x6F	; 111
 51c:	c1 f0       	breq	.+48     	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>
 51e:	18 f4       	brcc	.+6      	; 0x526 <__LOCK_REGION_LENGTH__+0x126>
 520:	88 35       	cpi	r24, 0x58	; 88
 522:	79 f0       	breq	.+30     	; 0x542 <__LOCK_REGION_LENGTH__+0x142>
 524:	ae c0       	rjmp	.+348    	; 0x682 <__LOCK_REGION_LENGTH__+0x282>
 526:	80 37       	cpi	r24, 0x70	; 112
 528:	19 f0       	breq	.+6      	; 0x530 <__LOCK_REGION_LENGTH__+0x130>
 52a:	88 37       	cpi	r24, 0x78	; 120
 52c:	21 f0       	breq	.+8      	; 0x536 <__LOCK_REGION_LENGTH__+0x136>
 52e:	a9 c0       	rjmp	.+338    	; 0x682 <__LOCK_REGION_LENGTH__+0x282>
 530:	e9 2f       	mov	r30, r25
 532:	e0 61       	ori	r30, 0x10	; 16
 534:	be 2e       	mov	r11, r30
 536:	b4 fe       	sbrs	r11, 4
 538:	0d c0       	rjmp	.+26     	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 53a:	fb 2d       	mov	r31, r11
 53c:	f4 60       	ori	r31, 0x04	; 4
 53e:	bf 2e       	mov	r11, r31
 540:	09 c0       	rjmp	.+18     	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 542:	34 fe       	sbrs	r3, 4
 544:	0a c0       	rjmp	.+20     	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
 546:	29 2f       	mov	r18, r25
 548:	26 60       	ori	r18, 0x06	; 6
 54a:	b2 2e       	mov	r11, r18
 54c:	06 c0       	rjmp	.+12     	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
 54e:	28 e0       	ldi	r18, 0x08	; 8
 550:	30 e0       	ldi	r19, 0x00	; 0
 552:	05 c0       	rjmp	.+10     	; 0x55e <__LOCK_REGION_LENGTH__+0x15e>
 554:	20 e1       	ldi	r18, 0x10	; 16
 556:	30 e0       	ldi	r19, 0x00	; 0
 558:	02 c0       	rjmp	.+4      	; 0x55e <__LOCK_REGION_LENGTH__+0x15e>
 55a:	20 e1       	ldi	r18, 0x10	; 16
 55c:	32 e0       	ldi	r19, 0x02	; 2
 55e:	f8 01       	movw	r30, r16
 560:	b7 fe       	sbrs	r11, 7
 562:	07 c0       	rjmp	.+14     	; 0x572 <__LOCK_REGION_LENGTH__+0x172>
 564:	60 81       	ld	r22, Z
 566:	71 81       	ldd	r23, Z+1	; 0x01
 568:	82 81       	ldd	r24, Z+2	; 0x02
 56a:	93 81       	ldd	r25, Z+3	; 0x03
 56c:	0c 5f       	subi	r16, 0xFC	; 252
 56e:	1f 4f       	sbci	r17, 0xFF	; 255
 570:	06 c0       	rjmp	.+12     	; 0x57e <__LOCK_REGION_LENGTH__+0x17e>
 572:	60 81       	ld	r22, Z
 574:	71 81       	ldd	r23, Z+1	; 0x01
 576:	80 e0       	ldi	r24, 0x00	; 0
 578:	90 e0       	ldi	r25, 0x00	; 0
 57a:	0e 5f       	subi	r16, 0xFE	; 254
 57c:	1f 4f       	sbci	r17, 0xFF	; 255
 57e:	a3 01       	movw	r20, r6
 580:	f1 d0       	rcall	.+482    	; 0x764 <__ultoa_invert>
 582:	88 2e       	mov	r8, r24
 584:	86 18       	sub	r8, r6
 586:	fb 2d       	mov	r31, r11
 588:	ff 77       	andi	r31, 0x7F	; 127
 58a:	3f 2e       	mov	r3, r31
 58c:	36 fe       	sbrs	r3, 6
 58e:	0d c0       	rjmp	.+26     	; 0x5aa <__LOCK_REGION_LENGTH__+0x1aa>
 590:	23 2d       	mov	r18, r3
 592:	2e 7f       	andi	r18, 0xFE	; 254
 594:	a2 2e       	mov	r10, r18
 596:	89 14       	cp	r8, r9
 598:	58 f4       	brcc	.+22     	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
 59a:	34 fe       	sbrs	r3, 4
 59c:	0b c0       	rjmp	.+22     	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
 59e:	32 fc       	sbrc	r3, 2
 5a0:	09 c0       	rjmp	.+18     	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
 5a2:	83 2d       	mov	r24, r3
 5a4:	8e 7e       	andi	r24, 0xEE	; 238
 5a6:	a8 2e       	mov	r10, r24
 5a8:	05 c0       	rjmp	.+10     	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
 5aa:	b8 2c       	mov	r11, r8
 5ac:	a3 2c       	mov	r10, r3
 5ae:	03 c0       	rjmp	.+6      	; 0x5b6 <__LOCK_REGION_LENGTH__+0x1b6>
 5b0:	b8 2c       	mov	r11, r8
 5b2:	01 c0       	rjmp	.+2      	; 0x5b6 <__LOCK_REGION_LENGTH__+0x1b6>
 5b4:	b9 2c       	mov	r11, r9
 5b6:	a4 fe       	sbrs	r10, 4
 5b8:	0f c0       	rjmp	.+30     	; 0x5d8 <__LOCK_REGION_LENGTH__+0x1d8>
 5ba:	fe 01       	movw	r30, r28
 5bc:	e8 0d       	add	r30, r8
 5be:	f1 1d       	adc	r31, r1
 5c0:	80 81       	ld	r24, Z
 5c2:	80 33       	cpi	r24, 0x30	; 48
 5c4:	21 f4       	brne	.+8      	; 0x5ce <__LOCK_REGION_LENGTH__+0x1ce>
 5c6:	9a 2d       	mov	r25, r10
 5c8:	99 7e       	andi	r25, 0xE9	; 233
 5ca:	a9 2e       	mov	r10, r25
 5cc:	09 c0       	rjmp	.+18     	; 0x5e0 <__LOCK_REGION_LENGTH__+0x1e0>
 5ce:	a2 fe       	sbrs	r10, 2
 5d0:	06 c0       	rjmp	.+12     	; 0x5de <__LOCK_REGION_LENGTH__+0x1de>
 5d2:	b3 94       	inc	r11
 5d4:	b3 94       	inc	r11
 5d6:	04 c0       	rjmp	.+8      	; 0x5e0 <__LOCK_REGION_LENGTH__+0x1e0>
 5d8:	8a 2d       	mov	r24, r10
 5da:	86 78       	andi	r24, 0x86	; 134
 5dc:	09 f0       	breq	.+2      	; 0x5e0 <__LOCK_REGION_LENGTH__+0x1e0>
 5de:	b3 94       	inc	r11
 5e0:	a3 fc       	sbrc	r10, 3
 5e2:	10 c0       	rjmp	.+32     	; 0x604 <__LOCK_REGION_LENGTH__+0x204>
 5e4:	a0 fe       	sbrs	r10, 0
 5e6:	06 c0       	rjmp	.+12     	; 0x5f4 <__LOCK_REGION_LENGTH__+0x1f4>
 5e8:	b2 14       	cp	r11, r2
 5ea:	80 f4       	brcc	.+32     	; 0x60c <__LOCK_REGION_LENGTH__+0x20c>
 5ec:	28 0c       	add	r2, r8
 5ee:	92 2c       	mov	r9, r2
 5f0:	9b 18       	sub	r9, r11
 5f2:	0d c0       	rjmp	.+26     	; 0x60e <__LOCK_REGION_LENGTH__+0x20e>
 5f4:	b2 14       	cp	r11, r2
 5f6:	58 f4       	brcc	.+22     	; 0x60e <__LOCK_REGION_LENGTH__+0x20e>
 5f8:	b6 01       	movw	r22, r12
 5fa:	80 e2       	ldi	r24, 0x20	; 32
 5fc:	90 e0       	ldi	r25, 0x00	; 0
 5fe:	76 d0       	rcall	.+236    	; 0x6ec <fputc>
 600:	b3 94       	inc	r11
 602:	f8 cf       	rjmp	.-16     	; 0x5f4 <__LOCK_REGION_LENGTH__+0x1f4>
 604:	b2 14       	cp	r11, r2
 606:	18 f4       	brcc	.+6      	; 0x60e <__LOCK_REGION_LENGTH__+0x20e>
 608:	2b 18       	sub	r2, r11
 60a:	02 c0       	rjmp	.+4      	; 0x610 <__LOCK_REGION_LENGTH__+0x210>
 60c:	98 2c       	mov	r9, r8
 60e:	21 2c       	mov	r2, r1
 610:	a4 fe       	sbrs	r10, 4
 612:	0f c0       	rjmp	.+30     	; 0x632 <__LOCK_REGION_LENGTH__+0x232>
 614:	b6 01       	movw	r22, r12
 616:	80 e3       	ldi	r24, 0x30	; 48
 618:	90 e0       	ldi	r25, 0x00	; 0
 61a:	68 d0       	rcall	.+208    	; 0x6ec <fputc>
 61c:	a2 fe       	sbrs	r10, 2
 61e:	16 c0       	rjmp	.+44     	; 0x64c <__LOCK_REGION_LENGTH__+0x24c>
 620:	a1 fc       	sbrc	r10, 1
 622:	03 c0       	rjmp	.+6      	; 0x62a <__LOCK_REGION_LENGTH__+0x22a>
 624:	88 e7       	ldi	r24, 0x78	; 120
 626:	90 e0       	ldi	r25, 0x00	; 0
 628:	02 c0       	rjmp	.+4      	; 0x62e <__LOCK_REGION_LENGTH__+0x22e>
 62a:	88 e5       	ldi	r24, 0x58	; 88
 62c:	90 e0       	ldi	r25, 0x00	; 0
 62e:	b6 01       	movw	r22, r12
 630:	0c c0       	rjmp	.+24     	; 0x64a <__LOCK_REGION_LENGTH__+0x24a>
 632:	8a 2d       	mov	r24, r10
 634:	86 78       	andi	r24, 0x86	; 134
 636:	51 f0       	breq	.+20     	; 0x64c <__LOCK_REGION_LENGTH__+0x24c>
 638:	a1 fe       	sbrs	r10, 1
 63a:	02 c0       	rjmp	.+4      	; 0x640 <__LOCK_REGION_LENGTH__+0x240>
 63c:	8b e2       	ldi	r24, 0x2B	; 43
 63e:	01 c0       	rjmp	.+2      	; 0x642 <__LOCK_REGION_LENGTH__+0x242>
 640:	80 e2       	ldi	r24, 0x20	; 32
 642:	a7 fc       	sbrc	r10, 7
 644:	8d e2       	ldi	r24, 0x2D	; 45
 646:	b6 01       	movw	r22, r12
 648:	90 e0       	ldi	r25, 0x00	; 0
 64a:	50 d0       	rcall	.+160    	; 0x6ec <fputc>
 64c:	89 14       	cp	r8, r9
 64e:	30 f4       	brcc	.+12     	; 0x65c <__LOCK_REGION_LENGTH__+0x25c>
 650:	b6 01       	movw	r22, r12
 652:	80 e3       	ldi	r24, 0x30	; 48
 654:	90 e0       	ldi	r25, 0x00	; 0
 656:	4a d0       	rcall	.+148    	; 0x6ec <fputc>
 658:	9a 94       	dec	r9
 65a:	f8 cf       	rjmp	.-16     	; 0x64c <__LOCK_REGION_LENGTH__+0x24c>
 65c:	8a 94       	dec	r8
 65e:	f3 01       	movw	r30, r6
 660:	e8 0d       	add	r30, r8
 662:	f1 1d       	adc	r31, r1
 664:	80 81       	ld	r24, Z
 666:	b6 01       	movw	r22, r12
 668:	90 e0       	ldi	r25, 0x00	; 0
 66a:	40 d0       	rcall	.+128    	; 0x6ec <fputc>
 66c:	81 10       	cpse	r8, r1
 66e:	f6 cf       	rjmp	.-20     	; 0x65c <__LOCK_REGION_LENGTH__+0x25c>
 670:	22 20       	and	r2, r2
 672:	09 f4       	brne	.+2      	; 0x676 <__LOCK_REGION_LENGTH__+0x276>
 674:	4e ce       	rjmp	.-868    	; 0x312 <vfprintf+0x4c>
 676:	b6 01       	movw	r22, r12
 678:	80 e2       	ldi	r24, 0x20	; 32
 67a:	90 e0       	ldi	r25, 0x00	; 0
 67c:	37 d0       	rcall	.+110    	; 0x6ec <fputc>
 67e:	2a 94       	dec	r2
 680:	f7 cf       	rjmp	.-18     	; 0x670 <__LOCK_REGION_LENGTH__+0x270>
 682:	f6 01       	movw	r30, r12
 684:	86 81       	ldd	r24, Z+6	; 0x06
 686:	97 81       	ldd	r25, Z+7	; 0x07
 688:	02 c0       	rjmp	.+4      	; 0x68e <__LOCK_REGION_LENGTH__+0x28e>
 68a:	8f ef       	ldi	r24, 0xFF	; 255
 68c:	9f ef       	ldi	r25, 0xFF	; 255
 68e:	2b 96       	adiw	r28, 0x0b	; 11
 690:	0f b6       	in	r0, 0x3f	; 63
 692:	f8 94       	cli
 694:	de bf       	out	0x3e, r29	; 62
 696:	0f be       	out	0x3f, r0	; 63
 698:	cd bf       	out	0x3d, r28	; 61
 69a:	df 91       	pop	r29
 69c:	cf 91       	pop	r28
 69e:	1f 91       	pop	r17
 6a0:	0f 91       	pop	r16
 6a2:	ff 90       	pop	r15
 6a4:	ef 90       	pop	r14
 6a6:	df 90       	pop	r13
 6a8:	cf 90       	pop	r12
 6aa:	bf 90       	pop	r11
 6ac:	af 90       	pop	r10
 6ae:	9f 90       	pop	r9
 6b0:	8f 90       	pop	r8
 6b2:	7f 90       	pop	r7
 6b4:	6f 90       	pop	r6
 6b6:	5f 90       	pop	r5
 6b8:	4f 90       	pop	r4
 6ba:	3f 90       	pop	r3
 6bc:	2f 90       	pop	r2
 6be:	08 95       	ret

000006c0 <strnlen_P>:
 6c0:	fc 01       	movw	r30, r24
 6c2:	05 90       	lpm	r0, Z+
 6c4:	61 50       	subi	r22, 0x01	; 1
 6c6:	70 40       	sbci	r23, 0x00	; 0
 6c8:	01 10       	cpse	r0, r1
 6ca:	d8 f7       	brcc	.-10     	; 0x6c2 <strnlen_P+0x2>
 6cc:	80 95       	com	r24
 6ce:	90 95       	com	r25
 6d0:	8e 0f       	add	r24, r30
 6d2:	9f 1f       	adc	r25, r31
 6d4:	08 95       	ret

000006d6 <strnlen>:
 6d6:	fc 01       	movw	r30, r24
 6d8:	61 50       	subi	r22, 0x01	; 1
 6da:	70 40       	sbci	r23, 0x00	; 0
 6dc:	01 90       	ld	r0, Z+
 6de:	01 10       	cpse	r0, r1
 6e0:	d8 f7       	brcc	.-10     	; 0x6d8 <strnlen+0x2>
 6e2:	80 95       	com	r24
 6e4:	90 95       	com	r25
 6e6:	8e 0f       	add	r24, r30
 6e8:	9f 1f       	adc	r25, r31
 6ea:	08 95       	ret

000006ec <fputc>:
 6ec:	0f 93       	push	r16
 6ee:	1f 93       	push	r17
 6f0:	cf 93       	push	r28
 6f2:	df 93       	push	r29
 6f4:	fb 01       	movw	r30, r22
 6f6:	23 81       	ldd	r18, Z+3	; 0x03
 6f8:	21 fd       	sbrc	r18, 1
 6fa:	03 c0       	rjmp	.+6      	; 0x702 <fputc+0x16>
 6fc:	8f ef       	ldi	r24, 0xFF	; 255
 6fe:	9f ef       	ldi	r25, 0xFF	; 255
 700:	2c c0       	rjmp	.+88     	; 0x75a <fputc+0x6e>
 702:	22 ff       	sbrs	r18, 2
 704:	16 c0       	rjmp	.+44     	; 0x732 <fputc+0x46>
 706:	46 81       	ldd	r20, Z+6	; 0x06
 708:	57 81       	ldd	r21, Z+7	; 0x07
 70a:	24 81       	ldd	r18, Z+4	; 0x04
 70c:	35 81       	ldd	r19, Z+5	; 0x05
 70e:	42 17       	cp	r20, r18
 710:	53 07       	cpc	r21, r19
 712:	44 f4       	brge	.+16     	; 0x724 <fputc+0x38>
 714:	a0 81       	ld	r26, Z
 716:	b1 81       	ldd	r27, Z+1	; 0x01
 718:	9d 01       	movw	r18, r26
 71a:	2f 5f       	subi	r18, 0xFF	; 255
 71c:	3f 4f       	sbci	r19, 0xFF	; 255
 71e:	31 83       	std	Z+1, r19	; 0x01
 720:	20 83       	st	Z, r18
 722:	8c 93       	st	X, r24
 724:	26 81       	ldd	r18, Z+6	; 0x06
 726:	37 81       	ldd	r19, Z+7	; 0x07
 728:	2f 5f       	subi	r18, 0xFF	; 255
 72a:	3f 4f       	sbci	r19, 0xFF	; 255
 72c:	37 83       	std	Z+7, r19	; 0x07
 72e:	26 83       	std	Z+6, r18	; 0x06
 730:	14 c0       	rjmp	.+40     	; 0x75a <fputc+0x6e>
 732:	8b 01       	movw	r16, r22
 734:	ec 01       	movw	r28, r24
 736:	fb 01       	movw	r30, r22
 738:	00 84       	ldd	r0, Z+8	; 0x08
 73a:	f1 85       	ldd	r31, Z+9	; 0x09
 73c:	e0 2d       	mov	r30, r0
 73e:	19 95       	eicall
 740:	89 2b       	or	r24, r25
 742:	e1 f6       	brne	.-72     	; 0x6fc <fputc+0x10>
 744:	d8 01       	movw	r26, r16
 746:	16 96       	adiw	r26, 0x06	; 6
 748:	8d 91       	ld	r24, X+
 74a:	9c 91       	ld	r25, X
 74c:	17 97       	sbiw	r26, 0x07	; 7
 74e:	01 96       	adiw	r24, 0x01	; 1
 750:	17 96       	adiw	r26, 0x07	; 7
 752:	9c 93       	st	X, r25
 754:	8e 93       	st	-X, r24
 756:	16 97       	sbiw	r26, 0x06	; 6
 758:	ce 01       	movw	r24, r28
 75a:	df 91       	pop	r29
 75c:	cf 91       	pop	r28
 75e:	1f 91       	pop	r17
 760:	0f 91       	pop	r16
 762:	08 95       	ret

00000764 <__ultoa_invert>:
 764:	fa 01       	movw	r30, r20
 766:	aa 27       	eor	r26, r26
 768:	28 30       	cpi	r18, 0x08	; 8
 76a:	51 f1       	breq	.+84     	; 0x7c0 <__ultoa_invert+0x5c>
 76c:	20 31       	cpi	r18, 0x10	; 16
 76e:	81 f1       	breq	.+96     	; 0x7d0 <__ultoa_invert+0x6c>
 770:	e8 94       	clt
 772:	6f 93       	push	r22
 774:	6e 7f       	andi	r22, 0xFE	; 254
 776:	6e 5f       	subi	r22, 0xFE	; 254
 778:	7f 4f       	sbci	r23, 0xFF	; 255
 77a:	8f 4f       	sbci	r24, 0xFF	; 255
 77c:	9f 4f       	sbci	r25, 0xFF	; 255
 77e:	af 4f       	sbci	r26, 0xFF	; 255
 780:	b1 e0       	ldi	r27, 0x01	; 1
 782:	3e d0       	rcall	.+124    	; 0x800 <__ultoa_invert+0x9c>
 784:	b4 e0       	ldi	r27, 0x04	; 4
 786:	3c d0       	rcall	.+120    	; 0x800 <__ultoa_invert+0x9c>
 788:	67 0f       	add	r22, r23
 78a:	78 1f       	adc	r23, r24
 78c:	89 1f       	adc	r24, r25
 78e:	9a 1f       	adc	r25, r26
 790:	a1 1d       	adc	r26, r1
 792:	68 0f       	add	r22, r24
 794:	79 1f       	adc	r23, r25
 796:	8a 1f       	adc	r24, r26
 798:	91 1d       	adc	r25, r1
 79a:	a1 1d       	adc	r26, r1
 79c:	6a 0f       	add	r22, r26
 79e:	71 1d       	adc	r23, r1
 7a0:	81 1d       	adc	r24, r1
 7a2:	91 1d       	adc	r25, r1
 7a4:	a1 1d       	adc	r26, r1
 7a6:	20 d0       	rcall	.+64     	; 0x7e8 <__ultoa_invert+0x84>
 7a8:	09 f4       	brne	.+2      	; 0x7ac <__ultoa_invert+0x48>
 7aa:	68 94       	set
 7ac:	3f 91       	pop	r19
 7ae:	2a e0       	ldi	r18, 0x0A	; 10
 7b0:	26 9f       	mul	r18, r22
 7b2:	11 24       	eor	r1, r1
 7b4:	30 19       	sub	r19, r0
 7b6:	30 5d       	subi	r19, 0xD0	; 208
 7b8:	31 93       	st	Z+, r19
 7ba:	de f6       	brtc	.-74     	; 0x772 <__ultoa_invert+0xe>
 7bc:	cf 01       	movw	r24, r30
 7be:	08 95       	ret
 7c0:	46 2f       	mov	r20, r22
 7c2:	47 70       	andi	r20, 0x07	; 7
 7c4:	40 5d       	subi	r20, 0xD0	; 208
 7c6:	41 93       	st	Z+, r20
 7c8:	b3 e0       	ldi	r27, 0x03	; 3
 7ca:	0f d0       	rcall	.+30     	; 0x7ea <__ultoa_invert+0x86>
 7cc:	c9 f7       	brne	.-14     	; 0x7c0 <__ultoa_invert+0x5c>
 7ce:	f6 cf       	rjmp	.-20     	; 0x7bc <__ultoa_invert+0x58>
 7d0:	46 2f       	mov	r20, r22
 7d2:	4f 70       	andi	r20, 0x0F	; 15
 7d4:	40 5d       	subi	r20, 0xD0	; 208
 7d6:	4a 33       	cpi	r20, 0x3A	; 58
 7d8:	18 f0       	brcs	.+6      	; 0x7e0 <__ultoa_invert+0x7c>
 7da:	49 5d       	subi	r20, 0xD9	; 217
 7dc:	31 fd       	sbrc	r19, 1
 7de:	40 52       	subi	r20, 0x20	; 32
 7e0:	41 93       	st	Z+, r20
 7e2:	02 d0       	rcall	.+4      	; 0x7e8 <__ultoa_invert+0x84>
 7e4:	a9 f7       	brne	.-22     	; 0x7d0 <__ultoa_invert+0x6c>
 7e6:	ea cf       	rjmp	.-44     	; 0x7bc <__ultoa_invert+0x58>
 7e8:	b4 e0       	ldi	r27, 0x04	; 4
 7ea:	a6 95       	lsr	r26
 7ec:	97 95       	ror	r25
 7ee:	87 95       	ror	r24
 7f0:	77 95       	ror	r23
 7f2:	67 95       	ror	r22
 7f4:	ba 95       	dec	r27
 7f6:	c9 f7       	brne	.-14     	; 0x7ea <__ultoa_invert+0x86>
 7f8:	00 97       	sbiw	r24, 0x00	; 0
 7fa:	61 05       	cpc	r22, r1
 7fc:	71 05       	cpc	r23, r1
 7fe:	08 95       	ret
 800:	9b 01       	movw	r18, r22
 802:	ac 01       	movw	r20, r24
 804:	0a 2e       	mov	r0, r26
 806:	06 94       	lsr	r0
 808:	57 95       	ror	r21
 80a:	47 95       	ror	r20
 80c:	37 95       	ror	r19
 80e:	27 95       	ror	r18
 810:	ba 95       	dec	r27
 812:	c9 f7       	brne	.-14     	; 0x806 <__ultoa_invert+0xa2>
 814:	62 0f       	add	r22, r18
 816:	73 1f       	adc	r23, r19
 818:	84 1f       	adc	r24, r20
 81a:	95 1f       	adc	r25, r21
 81c:	a0 1d       	adc	r26, r0
 81e:	08 95       	ret

00000820 <_exit>:
 820:	f8 94       	cli

00000822 <__stop_program>:
 822:	ff cf       	rjmp	.-2      	; 0x822 <__stop_program>
